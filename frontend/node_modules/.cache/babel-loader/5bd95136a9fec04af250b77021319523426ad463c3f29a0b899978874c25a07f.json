{"ast":null,"code":"var _jsxFileName = \"/Users/tal/Desktop/streaming/frontend/src/components/Think.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './Think.css';\nimport Search from './Search';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Think = ({\n  data,\n  isFinished,\n  onComplete\n}) => {\n  _s();\n  const [displayText, setDisplayText] = useState('');\n  const [isTyping, setIsTyping] = useState(false);\n  const [showComplete, setShowComplete] = useState(false);\n  const [currentTitle, setCurrentTitle] = useState('');\n  useEffect(() => {\n    if (data && data.content) {\n      const content = data.content.content || '';\n      const title = data.content.title || '';\n      if (title && title !== currentTitle) {\n        setCurrentTitle(title);\n      }\n      if (content && !isTyping) {\n        typeText(content);\n      }\n    }\n  }, [data]);\n  useEffect(() => {\n    var _data$content;\n    if (isFinished && data !== null && data !== void 0 && (_data$content = data.content) !== null && _data$content !== void 0 && _data$content.is_finished) {\n      setShowComplete(true);\n      setIsTyping(false);\n      if (onComplete) {\n        onComplete();\n      }\n    }\n  }, [isFinished, data, onComplete]);\n  const typeText = text => {\n    setIsTyping(true);\n    setDisplayText(prev => prev + text); // ËøΩÂä†ÊñáÊú¨ËÄå‰∏çÊòØÊõøÊç¢\n\n    // Ê®°ÊãüÊÄùËÄÉÂª∂Ëøü\n    setTimeout(() => {\n      setIsTyping(false);\n    }, 100);\n  };\n\n  // Ê†πÊçÆcontent.typeÊ∏≤Êüì‰∏çÂêåÁöÑÁªÑ‰ª∂\n  const renderContent = () => {\n    var _data$content2;\n    if ((data === null || data === void 0 ? void 0 : (_data$content2 = data.content) === null || _data$content2 === void 0 ? void 0 : _data$content2.type) === 'search') {\n      return /*#__PURE__*/_jsxDEV(Search, {\n        data: data.content,\n        isFinished: isFinished\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 14\n      }, this);\n    }\n\n    // ÈªòËÆ§ÁöÑÊÄùËÄÉÁªÑ‰ª∂\n    const getTitle = () => {\n      var _data$content3;\n      if (data !== null && data !== void 0 && (_data$content3 = data.content) !== null && _data$content3 !== void 0 && _data$content3.title) {\n        return data.content.title;\n      }\n      return 'ÊÄùËÄÉ‰∏≠...';\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `think-container ${isFinished ? 'finished' : ''}`,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"think-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"think-icon\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"brain-icon\",\n            children: \"\\uD83E\\uDDE0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"think-title\",\n          children: getTitle()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), isTyping && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"typing-indicator\",\n          children: \"\\u601D\\u8003\\u4E2D...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 24\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"think-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"think-text\",\n          children: [displayText, isTyping && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"cursor\",\n            children: \"|\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 26\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), showComplete && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"think-complete\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"complete-icon\",\n            children: \"\\u2728\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"\\u601D\\u8003\\u5B8C\\u6210\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this);\n  };\n  return renderContent();\n};\n_s(Think, \"wX7eVt8BJ2Tm/7eGl6+fw8Yu5ew=\");\n_c = Think;\nexport default Think;\nvar _c;\n$RefreshReg$(_c, \"Think\");","map":{"version":3,"names":["React","useState","useEffect","Search","jsxDEV","_jsxDEV","Think","data","isFinished","onComplete","_s","displayText","setDisplayText","isTyping","setIsTyping","showComplete","setShowComplete","currentTitle","setCurrentTitle","content","title","typeText","_data$content","is_finished","text","prev","setTimeout","renderContent","_data$content2","type","fileName","_jsxFileName","lineNumber","columnNumber","getTitle","_data$content3","className","children","_c","$RefreshReg$"],"sources":["/Users/tal/Desktop/streaming/frontend/src/components/Think.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './Think.css';\nimport Search from './Search';\n\nconst Think = ({ data, isFinished, onComplete }) => {\n  const [displayText, setDisplayText] = useState('');\n  const [isTyping, setIsTyping] = useState(false);\n  const [showComplete, setShowComplete] = useState(false);\n  const [currentTitle, setCurrentTitle] = useState('');\n\n  useEffect(() => {\n    if (data && data.content) {\n      const content = data.content.content || '';\n      const title = data.content.title || '';\n      \n      if (title && title !== currentTitle) {\n        setCurrentTitle(title);\n      }\n      \n      if (content && !isTyping) {\n        typeText(content);\n      }\n    }\n  }, [data]);\n\n  useEffect(() => {\n    if (isFinished && data?.content?.is_finished) {\n      setShowComplete(true);\n      setIsTyping(false);\n      if (onComplete) {\n        onComplete();\n      }\n    }\n  }, [isFinished, data, onComplete]);\n\n  const typeText = (text) => {\n    setIsTyping(true);\n    setDisplayText(prev => prev + text); // ËøΩÂä†ÊñáÊú¨ËÄå‰∏çÊòØÊõøÊç¢\n    \n    // Ê®°ÊãüÊÄùËÄÉÂª∂Ëøü\n    setTimeout(() => {\n      setIsTyping(false);\n    }, 100);\n  };\n\n  // Ê†πÊçÆcontent.typeÊ∏≤Êüì‰∏çÂêåÁöÑÁªÑ‰ª∂\n  const renderContent = () => {\n    if (data?.content?.type === 'search') {\n      return <Search data={data.content} isFinished={isFinished} />;\n    }\n    \n    // ÈªòËÆ§ÁöÑÊÄùËÄÉÁªÑ‰ª∂\n    const getTitle = () => {\n      if (data?.content?.title) {\n        return data.content.title;\n      }\n      return 'ÊÄùËÄÉ‰∏≠...';\n    };\n\n    return (\n      <div className={`think-container ${isFinished ? 'finished' : ''}`}>\n        <div className=\"think-header\">\n          <div className=\"think-icon\">\n            <span className=\"brain-icon\">üß†</span>\n          </div>\n          <div className=\"think-title\">{getTitle()}</div>\n          {isTyping && <div className=\"typing-indicator\">ÊÄùËÄÉ‰∏≠...</div>}\n        </div>\n        <div className=\"think-content\">\n          <div className=\"think-text\">\n            {displayText}\n            {isTyping && <span className=\"cursor\">|</span>}\n          </div>\n          {showComplete && (\n            <div className=\"think-complete\">\n              <span className=\"complete-icon\">‚ú®</span>\n              <span>ÊÄùËÄÉÂÆåÊàê</span>\n            </div>\n          )}\n        </div>\n      </div>\n    );\n  };\n\n  return renderContent();\n};\n\nexport default Think;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}