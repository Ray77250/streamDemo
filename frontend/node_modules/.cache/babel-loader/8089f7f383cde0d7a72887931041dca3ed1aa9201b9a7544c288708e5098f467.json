{"ast":null,"code":"var _jsxFileName = \"/Users/tal/Desktop/streaming/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport Step from './components/Step';\nimport Think from './components/Think';\nimport Text from './components/Text';\nimport sseService from './services/sseService';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [isConnected, setIsConnected] = useState(false);\n  const [messageCount, setMessageCount] = useState(0);\n  const [lastUpdate, setLastUpdate] = useState('-');\n  const [speed, setSpeed] = useState(1000);\n  const [components, setComponents] = useState([]);\n  const [isStreaming, setIsStreaming] = useState(false);\n  const [completedComponents, setCompletedComponents] = useState(new Set());\n\n  // 处理SSE消息\n  const handleSSEMessage = useCallback((eventType, data) => {\n    switch (eventType) {\n      case 'connected':\n        setIsConnected(true);\n        break;\n      case 'error':\n        console.error('SSE错误:', data);\n        break;\n      case 'message':\n        handleNewMessage(data);\n        break;\n      case 'complete':\n        setIsStreaming(false);\n        break;\n      default:\n        break;\n    }\n    setLastUpdate(new Date().toLocaleTimeString());\n  }, []);\n\n  // 处理新消息\n  const handleNewMessage = useCallback(data => {\n    setMessageCount(prev => prev + 1);\n    if (data.type === 'step') {\n      setComponents(prev => {\n        const newComponents = [...prev];\n\n        // 找到最后一个（最新的）未完成的step组件\n        let activeStepIndex = -1;\n        for (let i = newComponents.length - 1; i >= 0; i--) {\n          if (newComponents[i].type === 'step' && !newComponents[i].isFinished) {\n            activeStepIndex = i;\n            break;\n          }\n        }\n        if (activeStepIndex >= 0) {\n          var _currentComponent$dat, _data$content;\n          // 更新当前活跃的step组件，但避免重复更新相同的数据\n          const currentComponent = newComponents[activeStepIndex];\n          if (currentComponent.data.msg_id !== data.msg_id && ((_currentComponent$dat = currentComponent.data.content) === null || _currentComponent$dat === void 0 ? void 0 : _currentComponent$dat.content) !== ((_data$content = data.content) === null || _data$content === void 0 ? void 0 : _data$content.content)) {\n            var _data$content2;\n            newComponents[activeStepIndex] = {\n              ...currentComponent,\n              data: data,\n              isFinished: ((_data$content2 = data.content) === null || _data$content2 === void 0 ? void 0 : _data$content2.is_finished) || false\n            };\n          }\n        } else {\n          var _data$content3;\n          // 没有活跃的step组件，创建新的\n          newComponents.push({\n            id: `${data.msg_id}_${Date.now()}`,\n            // 生成唯一ID\n            type: 'step',\n            data: data,\n            isFinished: ((_data$content3 = data.content) === null || _data$content3 === void 0 ? void 0 : _data$content3.is_finished) || false\n          });\n        }\n        return newComponents;\n      });\n    } else if (data.type === 'think') {\n      setComponents(prev => {\n        const newComponents = [...prev];\n\n        // 找到最后一个（最新的）未完成的think组件\n        let activeThinkIndex = -1;\n        for (let i = newComponents.length - 1; i >= 0; i--) {\n          if (newComponents[i].type === 'think' && !newComponents[i].isFinished) {\n            activeThinkIndex = i;\n            break;\n          }\n        }\n        if (activeThinkIndex >= 0) {\n          var _currentComponent$dat2, _data$content4;\n          // 更新当前活跃的think组件，但避免重复更新相同的数据\n          const currentComponent = newComponents[activeThinkIndex];\n          if (currentComponent.data.msg_id !== data.msg_id && ((_currentComponent$dat2 = currentComponent.data.content) === null || _currentComponent$dat2 === void 0 ? void 0 : _currentComponent$dat2.content) !== ((_data$content4 = data.content) === null || _data$content4 === void 0 ? void 0 : _data$content4.content)) {\n            var _data$content5;\n            newComponents[activeThinkIndex] = {\n              ...currentComponent,\n              data: data,\n              isFinished: ((_data$content5 = data.content) === null || _data$content5 === void 0 ? void 0 : _data$content5.is_finished) || false\n            };\n          }\n        } else {\n          var _data$content6;\n          // 没有活跃的think组件，创建新的\n          newComponents.push({\n            id: `${data.msg_id}_${Date.now()}`,\n            // 生成唯一ID\n            type: 'think',\n            data: data,\n            isFinished: ((_data$content6 = data.content) === null || _data$content6 === void 0 ? void 0 : _data$content6.is_finished) || false\n          });\n        }\n        return newComponents;\n      });\n    } else if (data.type === 'text') {\n      setComponents(prev => {\n        const newComponents = [...prev];\n\n        // 找到最后一个（最新的）未完成的text组件\n        let activeTextIndex = -1;\n        for (let i = newComponents.length - 1; i >= 0; i--) {\n          if (newComponents[i].type === 'text' && !newComponents[i].isFinished) {\n            activeTextIndex = i;\n            break;\n          }\n        }\n        if (activeTextIndex >= 0) {\n          var _currentComponent$dat3, _data$content7;\n          // 更新当前活跃的text组件，但避免重复更新相同的数据\n          const currentComponent = newComponents[activeTextIndex];\n          if (currentComponent.data.msg_id !== data.msg_id && ((_currentComponent$dat3 = currentComponent.data.content) === null || _currentComponent$dat3 === void 0 ? void 0 : _currentComponent$dat3.content) !== ((_data$content7 = data.content) === null || _data$content7 === void 0 ? void 0 : _data$content7.content)) {\n            var _data$content8;\n            newComponents[activeTextIndex] = {\n              ...currentComponent,\n              data: data,\n              isFinished: ((_data$content8 = data.content) === null || _data$content8 === void 0 ? void 0 : _data$content8.is_finished) || false\n            };\n          }\n        } else {\n          var _data$content9;\n          // 没有活跃的text组件，创建新的\n          newComponents.push({\n            id: `${data.msg_id}_${Date.now()}`,\n            // 生成唯一ID\n            type: 'text',\n            data: data,\n            isFinished: ((_data$content9 = data.content) === null || _data$content9 === void 0 ? void 0 : _data$content9.is_finished) || false\n          });\n        }\n        return newComponents;\n      });\n    }\n  }, []);\n\n  // 连接SSE\n  const connect = useCallback(() => {\n    sseService.connect();\n  }, []);\n\n  // 开始推送\n  const startStream = useCallback(async () => {\n    if (!isConnected) {\n      alert('请先连接SSE');\n      return;\n    }\n    try {\n      await sseService.startStream(speed);\n      setIsStreaming(true);\n    } catch (error) {\n      console.error('开始推送失败:', error);\n      alert('开始推送失败: ' + error.message);\n    }\n  }, [isConnected, speed]);\n\n  // 组件完成回调\n  const handleComponentComplete = useCallback(componentId => {\n    if (!completedComponents.has(componentId)) {\n      setCompletedComponents(prev => new Set([...prev, componentId]));\n      console.log(`组件 ${componentId} 完成`);\n    }\n  }, [completedComponents]);\n\n  // 清空内容\n  const clearContent = useCallback(() => {\n    setComponents([]);\n    setMessageCount(0);\n    setLastUpdate('-');\n    setIsStreaming(false);\n    setCompletedComponents(new Set());\n    console.log('前端内容已清空');\n  }, []);\n\n  // 注册SSE监听器\n  useEffect(() => {\n    const unsubscribe = sseService.addListener(handleSSEMessage);\n    return unsubscribe;\n  }, [handleSSEMessage]);\n\n  // 渲染组件\n  const renderComponent = component => {\n    const commonProps = {\n      data: component.data,\n      isFinished: component.isFinished,\n      onComplete: () => handleComponentComplete(component.id)\n    };\n    switch (component.type) {\n      case 'step':\n        return /*#__PURE__*/_jsxDEV(Step, {\n          ...commonProps\n        }, component.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 16\n        }, this);\n      case 'think':\n        return /*#__PURE__*/_jsxDEV(Think, {\n          ...commonProps\n        }, component.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 16\n        }, this);\n      case 'text':\n        return /*#__PURE__*/_jsxDEV(Text, {\n          ...commonProps\n        }, component.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 16\n        }, this);\n      default:\n        return null;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: `status ${isConnected ? 'status-connected' : 'status-disconnected'}`,\n        children: isConnected ? '已连接' : '未连接'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"stats\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stat-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"\\u63A5\\u6536\\u6D88\\u606F:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 13\n          }, this), \" \", messageCount]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stat-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"\\u6700\\u540E\\u66F4\\u65B0:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 13\n          }, this), \" \", lastUpdate]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"controls\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-primary\",\n          onClick: connect,\n          disabled: isConnected,\n          children: \"\\u8FDE\\u63A5SSE\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-success\",\n          onClick: startStream,\n          disabled: !isConnected || isStreaming,\n          children: \"\\u5F00\\u59CB\\u63A8\\u9001\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-warning\",\n          onClick: clearContent,\n          disabled: components.length === 0,\n          children: \"\\u6E05\\u7A7A\\u5185\\u5BB9\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"speed-control\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"\\u63A8\\u9001\\u901F\\u5EA6:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 258,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: speed,\n            onChange: e => setSpeed(parseInt(e.target.value)),\n            disabled: isStreaming,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: 500,\n              children: \"\\u5FEB\\u901F (500ms)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 264,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: 1000,\n              children: \"\\u6B63\\u5E38 (1s)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 265,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: 2000,\n              children: \"\\u6162\\u901F (2s)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 266,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: 3000,\n              children: \"\\u5F88\\u6162 (3s)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 267,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 259,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content-area\",\n        children: components.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"empty-state\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"\\u7B49\\u5F85\\u6570\\u636E...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 275,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"\\u8BF7\\u5148\\u8FDE\\u63A5SSE\\uFF0C\\u7136\\u540E\\u5F00\\u59CB\\u63A8\\u9001\\u6570\\u636E\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 276,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"components-container\",\n          children: components.map(renderComponent)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 218,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"QTuHE6TZMc8PfCxE8KA/pnZqrwc=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","Step","Think","Text","sseService","jsxDEV","_jsxDEV","App","_s","isConnected","setIsConnected","messageCount","setMessageCount","lastUpdate","setLastUpdate","speed","setSpeed","components","setComponents","isStreaming","setIsStreaming","completedComponents","setCompletedComponents","Set","handleSSEMessage","eventType","data","console","error","handleNewMessage","Date","toLocaleTimeString","prev","type","newComponents","activeStepIndex","i","length","isFinished","_currentComponent$dat","_data$content","currentComponent","msg_id","content","_data$content2","is_finished","_data$content3","push","id","now","activeThinkIndex","_currentComponent$dat2","_data$content4","_data$content5","_data$content6","activeTextIndex","_currentComponent$dat3","_data$content7","_data$content8","_data$content9","connect","startStream","alert","message","handleComponentComplete","componentId","has","log","clearContent","unsubscribe","addListener","renderComponent","component","commonProps","onComplete","fileName","_jsxFileName","lineNumber","columnNumber","className","children","onClick","disabled","value","onChange","e","parseInt","target","map","_c","$RefreshReg$"],"sources":["/Users/tal/Desktop/streaming/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport Step from './components/Step';\nimport Think from './components/Think';\nimport Text from './components/Text';\nimport sseService from './services/sseService';\nimport './App.css';\n\nfunction App() {\n  const [isConnected, setIsConnected] = useState(false);\n  const [messageCount, setMessageCount] = useState(0);\n  const [lastUpdate, setLastUpdate] = useState('-');\n  const [speed, setSpeed] = useState(1000);\n  const [components, setComponents] = useState([]);\n  const [isStreaming, setIsStreaming] = useState(false);\n  const [completedComponents, setCompletedComponents] = useState(new Set());\n\n  // 处理SSE消息\n  const handleSSEMessage = useCallback((eventType, data) => {\n    switch (eventType) {\n      case 'connected':\n        setIsConnected(true);\n        break;\n      case 'error':\n        console.error('SSE错误:', data);\n        break;\n      case 'message':\n        handleNewMessage(data);\n        break;\n      case 'complete':\n        setIsStreaming(false);\n        break;\n      default:\n        break;\n    }\n    setLastUpdate(new Date().toLocaleTimeString());\n  }, []);\n\n  // 处理新消息\n  const handleNewMessage = useCallback((data) => {\n    setMessageCount(prev => prev + 1);\n    \n    if (data.type === 'step') {\n      setComponents(prev => {\n        const newComponents = [...prev];\n        \n        // 找到最后一个（最新的）未完成的step组件\n        let activeStepIndex = -1;\n        for (let i = newComponents.length - 1; i >= 0; i--) {\n          if (newComponents[i].type === 'step' && !newComponents[i].isFinished) {\n            activeStepIndex = i;\n            break;\n          }\n        }\n        \n        if (activeStepIndex >= 0) {\n          // 更新当前活跃的step组件，但避免重复更新相同的数据\n          const currentComponent = newComponents[activeStepIndex];\n          if (currentComponent.data.msg_id !== data.msg_id && \n              currentComponent.data.content?.content !== data.content?.content) {\n            newComponents[activeStepIndex] = {\n              ...currentComponent,\n              data: data,\n              isFinished: data.content?.is_finished || false\n            };\n          }\n        } else {\n          // 没有活跃的step组件，创建新的\n          newComponents.push({\n            id: `${data.msg_id}_${Date.now()}`, // 生成唯一ID\n            type: 'step',\n            data: data,\n            isFinished: data.content?.is_finished || false\n          });\n        }\n        return newComponents;\n      });\n    } else if (data.type === 'think') {\n      setComponents(prev => {\n        const newComponents = [...prev];\n        \n        // 找到最后一个（最新的）未完成的think组件\n        let activeThinkIndex = -1;\n        for (let i = newComponents.length - 1; i >= 0; i--) {\n          if (newComponents[i].type === 'think' && !newComponents[i].isFinished) {\n            activeThinkIndex = i;\n            break;\n          }\n        }\n        \n        if (activeThinkIndex >= 0) {\n          // 更新当前活跃的think组件，但避免重复更新相同的数据\n          const currentComponent = newComponents[activeThinkIndex];\n          if (currentComponent.data.msg_id !== data.msg_id && \n              currentComponent.data.content?.content !== data.content?.content) {\n            newComponents[activeThinkIndex] = {\n              ...currentComponent,\n              data: data,\n              isFinished: data.content?.is_finished || false\n            };\n          }\n        } else {\n          // 没有活跃的think组件，创建新的\n          newComponents.push({\n            id: `${data.msg_id}_${Date.now()}`, // 生成唯一ID\n            type: 'think',\n            data: data,\n            isFinished: data.content?.is_finished || false\n          });\n        }\n        return newComponents;\n      });\n    } else if (data.type === 'text') {\n      setComponents(prev => {\n        const newComponents = [...prev];\n        \n        // 找到最后一个（最新的）未完成的text组件\n        let activeTextIndex = -1;\n        for (let i = newComponents.length - 1; i >= 0; i--) {\n          if (newComponents[i].type === 'text' && !newComponents[i].isFinished) {\n            activeTextIndex = i;\n            break;\n          }\n        }\n        \n        if (activeTextIndex >= 0) {\n          // 更新当前活跃的text组件，但避免重复更新相同的数据\n          const currentComponent = newComponents[activeTextIndex];\n          if (currentComponent.data.msg_id !== data.msg_id && \n              currentComponent.data.content?.content !== data.content?.content) {\n            newComponents[activeTextIndex] = {\n              ...currentComponent,\n              data: data,\n              isFinished: data.content?.is_finished || false\n            };\n          }\n        } else {\n          // 没有活跃的text组件，创建新的\n          newComponents.push({\n            id: `${data.msg_id}_${Date.now()}`, // 生成唯一ID\n            type: 'text',\n            data: data,\n            isFinished: data.content?.is_finished || false\n          });\n        }\n        return newComponents;\n      });\n    }\n  }, []);\n\n  // 连接SSE\n  const connect = useCallback(() => {\n    sseService.connect();\n  }, []);\n\n\n  // 开始推送\n  const startStream = useCallback(async () => {\n    if (!isConnected) {\n      alert('请先连接SSE');\n      return;\n    }\n    \n    try {\n      await sseService.startStream(speed);\n      setIsStreaming(true);\n    } catch (error) {\n      console.error('开始推送失败:', error);\n      alert('开始推送失败: ' + error.message);\n    }\n  }, [isConnected, speed]);\n\n\n  // 组件完成回调\n  const handleComponentComplete = useCallback((componentId) => {\n    if (!completedComponents.has(componentId)) {\n      setCompletedComponents(prev => new Set([...prev, componentId]));\n      console.log(`组件 ${componentId} 完成`);\n    }\n  }, [completedComponents]);\n\n  // 清空内容\n  const clearContent = useCallback(() => {\n    setComponents([]);\n    setMessageCount(0);\n    setLastUpdate('-');\n    setIsStreaming(false);\n    setCompletedComponents(new Set());\n    console.log('前端内容已清空');\n  }, []);\n\n  // 注册SSE监听器\n  useEffect(() => {\n    const unsubscribe = sseService.addListener(handleSSEMessage);\n    return unsubscribe;\n  }, [handleSSEMessage]);\n\n  // 渲染组件\n  const renderComponent = (component) => {\n    const commonProps = {\n      data: component.data,\n      isFinished: component.isFinished,\n      onComplete: () => handleComponentComplete(component.id)\n    };\n\n    switch (component.type) {\n      case 'step':\n        return <Step key={component.id} {...commonProps} />;\n      case 'think':\n        return <Think key={component.id} {...commonProps} />;\n      case 'text':\n        return <Text key={component.id} {...commonProps} />;\n      default:\n        return null;\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <div className=\"container\">\n\n        <div className={`status ${isConnected ? 'status-connected' : 'status-disconnected'}`}>\n          {isConnected ? '已连接' : '未连接'}\n        </div>\n\n        <div className=\"stats\">\n          <div className=\"stat-item\">\n            <strong>接收消息:</strong> {messageCount}\n          </div>\n          <div className=\"stat-item\">\n            <strong>最后更新:</strong> {lastUpdate}\n          </div>\n        </div>\n\n        <div className=\"controls\">\n          <button \n            className=\"btn btn-primary\" \n            onClick={connect}\n            disabled={isConnected}\n          >\n            连接SSE\n          </button>\n          <button \n            className=\"btn btn-success\" \n            onClick={startStream}\n            disabled={!isConnected || isStreaming}\n          >\n            开始推送\n          </button>\n          <button \n            className=\"btn btn-warning\" \n            onClick={clearContent}\n            disabled={components.length === 0}\n          >\n            清空内容\n          </button>\n\n          <div className=\"speed-control\">\n            <label>推送速度:</label>\n            <select \n              value={speed} \n              onChange={(e) => setSpeed(parseInt(e.target.value))}\n              disabled={isStreaming}\n            >\n              <option value={500}>快速 (500ms)</option>\n              <option value={1000}>正常 (1s)</option>\n              <option value={2000}>慢速 (2s)</option>\n              <option value={3000}>很慢 (3s)</option>\n            </select>\n          </div>\n        </div>\n\n        <div className=\"content-area\">\n          {components.length === 0 ? (\n            <div className=\"empty-state\">\n              <p>等待数据...</p>\n              <p>请先连接SSE，然后开始推送数据</p>\n            </div>\n          ) : (\n            <div className=\"components-container\">\n              {components.map(renderComponent)}\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}