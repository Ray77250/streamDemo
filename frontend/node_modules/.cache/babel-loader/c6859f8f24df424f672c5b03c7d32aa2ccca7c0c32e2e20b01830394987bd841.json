{"ast":null,"code":"var _jsxFileName = \"/Users/tal/Desktop/streaming/frontend/src/components/Think.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport './Think.css';\nimport Search from './Search';\n\n// 全局状态管理器，用于持久化Think组件的展开状态\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst thinkStates = new Map();\nconst Think = ({\n  data,\n  isFinished,\n  onComplete\n}) => {\n  _s();\n  const [displayText, setDisplayText] = useState('');\n  const [isTyping, setIsTyping] = useState(false);\n  const [hasSearch, setHasSearch] = useState(false);\n  const [searchData, setSearchData] = useState(null);\n  const [isCollapsed, setIsCollapsed] = useState(false);\n  const [shouldAutoCollapse, setShouldAutoCollapse] = useState(false);\n  const lastProcessedMsgIdRef = useRef('');\n\n  // 生成组件唯一标识\n  const componentKey = `think_${(data === null || data === void 0 ? void 0 : data.msg_id) || 'unknown'}`;\n\n  // 从全局状态管理器恢复展开状态\n  useEffect(() => {\n    const savedState = thinkStates.get(componentKey);\n    if (savedState !== undefined) {\n      setIsCollapsed(savedState);\n    }\n  }, [componentKey]);\n  useEffect(() => {\n    if (data && data.content && data.msg_id) {\n      const content = data.content.content || '';\n      const type = data.content.type;\n\n      // 只有当消息ID不同时才处理，避免重复处理同一消息\n      if (lastProcessedMsgIdRef.current !== data.msg_id) {\n        lastProcessedMsgIdRef.current = data.msg_id;\n\n        // 如果遇到search类型，记录并保存search数据\n        if (type === 'search') {\n          setHasSearch(true);\n          setSearchData(data.content);\n        }\n\n        // 处理search类型的content内容\n        if (type === 'search' && content) {\n          // 将search内容传递给Search组件进行追加\n          setSearchData(prev => ({\n            ...prev,\n            content: ((prev === null || prev === void 0 ? void 0 : prev.content) || '') + content\n          }));\n        }\n\n        // 处理非search类型的消息\n        if (content && !isTyping && type !== 'search') {\n          typeText(content);\n        }\n      }\n    }\n  }, [data, isTyping]);\n  useEffect(() => {\n    var _data$content;\n    if (isFinished && data !== null && data !== void 0 && (_data$content = data.content) !== null && _data$content !== void 0 && _data$content.is_finished) {\n      setIsTyping(false);\n      setShouldAutoCollapse(true);\n      if (onComplete) {\n        onComplete();\n      }\n    }\n  }, [isFinished, data, onComplete]);\n\n  // 思考完成后自动折叠\n  useEffect(() => {\n    if (shouldAutoCollapse) {\n      const timer = setTimeout(() => {\n        setIsCollapsed(true);\n        collapseStateRef.current = true; // 同时更新ref\n        setShouldAutoCollapse(false);\n      }, 1000); // 1秒后自动折叠\n      return () => clearTimeout(timer);\n    }\n  }, [shouldAutoCollapse]);\n  const typeText = text => {\n    setIsTyping(true);\n    setDisplayText(prev => prev + text); // 追加文本而不是替换\n\n    // 立即完成，无延迟\n    setIsTyping(false);\n  };\n  const getTitle = () => {\n    var _data$content2, _data$content3;\n    if ((data === null || data === void 0 ? void 0 : (_data$content2 = data.content) === null || _data$content2 === void 0 ? void 0 : _data$content2.type) === 'search') {\n      return '搜索中...';\n    }\n    return (data === null || data === void 0 ? void 0 : (_data$content3 = data.content) === null || _data$content3 === void 0 ? void 0 : _data$content3.title) || '深度思考中...';\n  };\n  const toggleCollapse = () => {\n    const newCollapsedState = !isCollapsed;\n    setIsCollapsed(newCollapsedState);\n    thinkStates.set(componentKey, newCollapsedState); // 保存到全局状态管理器\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `think-container ${isFinished ? 'finished' : ''} ${isCollapsed ? 'collapsed' : ''}`,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"think-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"think-title\",\n        children: getTitle()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"think-toggle-btn\",\n        onClick: toggleCollapse,\n        \"aria-label\": isCollapsed ? '展开' : '折叠',\n        \"data-symbol\": isCollapsed ? '▶' : '▼'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"think-content\",\n      children: [hasSearch && searchData && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"think-search-section\",\n        children: /*#__PURE__*/_jsxDEV(Search, {\n          data: searchData,\n          isFinished: isFinished\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 11\n      }, this), displayText && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"think-text\",\n        children: [displayText, isTyping && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"cursor\",\n          children: \"|\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 26\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 5\n  }, this);\n};\n_s(Think, \"LPGpL4Zwme/UFobCoFPUc5faE7g=\");\n_c = Think;\nexport default Think;\nvar _c;\n$RefreshReg$(_c, \"Think\");","map":{"version":3,"names":["React","useState","useEffect","useRef","Search","jsxDEV","_jsxDEV","thinkStates","Map","Think","data","isFinished","onComplete","_s","displayText","setDisplayText","isTyping","setIsTyping","hasSearch","setHasSearch","searchData","setSearchData","isCollapsed","setIsCollapsed","shouldAutoCollapse","setShouldAutoCollapse","lastProcessedMsgIdRef","componentKey","msg_id","savedState","get","undefined","content","type","current","prev","typeText","_data$content","is_finished","timer","setTimeout","collapseStateRef","clearTimeout","text","getTitle","_data$content2","_data$content3","title","toggleCollapse","newCollapsedState","set","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/tal/Desktop/streaming/frontend/src/components/Think.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport './Think.css';\nimport Search from './Search';\n\n// 全局状态管理器，用于持久化Think组件的展开状态\nconst thinkStates = new Map();\n\nconst Think = ({ data, isFinished, onComplete }) => {\n  const [displayText, setDisplayText] = useState('');\n  const [isTyping, setIsTyping] = useState(false);\n  const [hasSearch, setHasSearch] = useState(false);\n  const [searchData, setSearchData] = useState(null);\n  const [isCollapsed, setIsCollapsed] = useState(false);\n  const [shouldAutoCollapse, setShouldAutoCollapse] = useState(false);\n  const lastProcessedMsgIdRef = useRef('');\n  \n  // 生成组件唯一标识\n  const componentKey = `think_${data?.msg_id || 'unknown'}`;\n\n  // 从全局状态管理器恢复展开状态\n  useEffect(() => {\n    const savedState = thinkStates.get(componentKey);\n    if (savedState !== undefined) {\n      setIsCollapsed(savedState);\n    }\n  }, [componentKey]);\n\n  useEffect(() => {\n    if (data && data.content && data.msg_id) {\n      const content = data.content.content || '';\n      const type = data.content.type;\n      \n      // 只有当消息ID不同时才处理，避免重复处理同一消息\n      if (lastProcessedMsgIdRef.current !== data.msg_id) {\n        lastProcessedMsgIdRef.current = data.msg_id;\n        \n        // 如果遇到search类型，记录并保存search数据\n        if (type === 'search') {\n          setHasSearch(true);\n          setSearchData(data.content);\n        }\n        \n        // 处理search类型的content内容\n        if (type === 'search' && content) {\n          // 将search内容传递给Search组件进行追加\n          setSearchData(prev => ({\n            ...prev,\n            content: (prev?.content || '') + content\n          }));\n        }\n        \n        // 处理非search类型的消息\n        if (content && !isTyping && type !== 'search') {\n          typeText(content);\n        }\n      }\n    }\n  }, [data, isTyping]);\n\n  useEffect(() => {\n    if (isFinished && data?.content?.is_finished) {\n      setIsTyping(false);\n      setShouldAutoCollapse(true);\n      if (onComplete) {\n        onComplete();\n      }\n    }\n  }, [isFinished, data, onComplete]);\n\n  // 思考完成后自动折叠\n  useEffect(() => {\n    if (shouldAutoCollapse) {\n      const timer = setTimeout(() => {\n        setIsCollapsed(true);\n        collapseStateRef.current = true; // 同时更新ref\n        setShouldAutoCollapse(false);\n      }, 1000); // 1秒后自动折叠\n      return () => clearTimeout(timer);\n    }\n  }, [shouldAutoCollapse]);\n\n  const typeText = (text) => {\n    setIsTyping(true);\n    setDisplayText(prev => prev + text); // 追加文本而不是替换\n    \n    // 立即完成，无延迟\n    setIsTyping(false);\n  };\n\n  const getTitle = () => {\n    if (data?.content?.type === 'search') {\n      return '搜索中...';\n    }\n    return data?.content?.title || '深度思考中...';\n  };\n\n  const toggleCollapse = () => {\n    const newCollapsedState = !isCollapsed;\n    setIsCollapsed(newCollapsedState);\n    thinkStates.set(componentKey, newCollapsedState); // 保存到全局状态管理器\n  };\n\n  return (\n    <div className={`think-container ${isFinished ? 'finished' : ''} ${isCollapsed ? 'collapsed' : ''}`}>\n      <div className=\"think-header\">\n        <div className=\"think-title\">{getTitle()}</div>\n        <button \n          className=\"think-toggle-btn\"\n          onClick={toggleCollapse}\n          aria-label={isCollapsed ? '展开' : '折叠'}\n          data-symbol={isCollapsed ? '▶' : '▼'}\n        >\n        </button>\n      </div>\n      <div className=\"think-content\">\n        {hasSearch && searchData && (\n          <div className=\"think-search-section\">\n            <Search data={searchData} isFinished={isFinished} />\n          </div>\n        )}\n      \n        {displayText && (\n          <div className=\"think-text\">\n            {displayText}\n            {isTyping && <span className=\"cursor\">|</span>}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Think;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAC1D,OAAO,aAAa;AACpB,OAAOC,MAAM,MAAM,UAAU;;AAE7B;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,WAAW,GAAG,IAAIC,GAAG,CAAC,CAAC;AAE7B,MAAMC,KAAK,GAAGA,CAAC;EAAEC,IAAI;EAAEC,UAAU;EAAEC;AAAW,CAAC,KAAK;EAAAC,EAAA;EAClD,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACe,QAAQ,EAAEC,WAAW,CAAC,GAAGhB,QAAQ,CAAC,KAAK,CAAC;EAC/C,MAAM,CAACiB,SAAS,EAAEC,YAAY,CAAC,GAAGlB,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACmB,UAAU,EAAEC,aAAa,CAAC,GAAGpB,QAAQ,CAAC,IAAI,CAAC;EAClD,MAAM,CAACqB,WAAW,EAAEC,cAAc,CAAC,GAAGtB,QAAQ,CAAC,KAAK,CAAC;EACrD,MAAM,CAACuB,kBAAkB,EAAEC,qBAAqB,CAAC,GAAGxB,QAAQ,CAAC,KAAK,CAAC;EACnE,MAAMyB,qBAAqB,GAAGvB,MAAM,CAAC,EAAE,CAAC;;EAExC;EACA,MAAMwB,YAAY,GAAG,SAAS,CAAAjB,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEkB,MAAM,KAAI,SAAS,EAAE;;EAEzD;EACA1B,SAAS,CAAC,MAAM;IACd,MAAM2B,UAAU,GAAGtB,WAAW,CAACuB,GAAG,CAACH,YAAY,CAAC;IAChD,IAAIE,UAAU,KAAKE,SAAS,EAAE;MAC5BR,cAAc,CAACM,UAAU,CAAC;IAC5B;EACF,CAAC,EAAE,CAACF,YAAY,CAAC,CAAC;EAElBzB,SAAS,CAAC,MAAM;IACd,IAAIQ,IAAI,IAAIA,IAAI,CAACsB,OAAO,IAAItB,IAAI,CAACkB,MAAM,EAAE;MACvC,MAAMI,OAAO,GAAGtB,IAAI,CAACsB,OAAO,CAACA,OAAO,IAAI,EAAE;MAC1C,MAAMC,IAAI,GAAGvB,IAAI,CAACsB,OAAO,CAACC,IAAI;;MAE9B;MACA,IAAIP,qBAAqB,CAACQ,OAAO,KAAKxB,IAAI,CAACkB,MAAM,EAAE;QACjDF,qBAAqB,CAACQ,OAAO,GAAGxB,IAAI,CAACkB,MAAM;;QAE3C;QACA,IAAIK,IAAI,KAAK,QAAQ,EAAE;UACrBd,YAAY,CAAC,IAAI,CAAC;UAClBE,aAAa,CAACX,IAAI,CAACsB,OAAO,CAAC;QAC7B;;QAEA;QACA,IAAIC,IAAI,KAAK,QAAQ,IAAID,OAAO,EAAE;UAChC;UACAX,aAAa,CAACc,IAAI,KAAK;YACrB,GAAGA,IAAI;YACPH,OAAO,EAAE,CAAC,CAAAG,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEH,OAAO,KAAI,EAAE,IAAIA;UACnC,CAAC,CAAC,CAAC;QACL;;QAEA;QACA,IAAIA,OAAO,IAAI,CAAChB,QAAQ,IAAIiB,IAAI,KAAK,QAAQ,EAAE;UAC7CG,QAAQ,CAACJ,OAAO,CAAC;QACnB;MACF;IACF;EACF,CAAC,EAAE,CAACtB,IAAI,EAAEM,QAAQ,CAAC,CAAC;EAEpBd,SAAS,CAAC,MAAM;IAAA,IAAAmC,aAAA;IACd,IAAI1B,UAAU,IAAID,IAAI,aAAJA,IAAI,gBAAA2B,aAAA,GAAJ3B,IAAI,CAAEsB,OAAO,cAAAK,aAAA,eAAbA,aAAA,CAAeC,WAAW,EAAE;MAC5CrB,WAAW,CAAC,KAAK,CAAC;MAClBQ,qBAAqB,CAAC,IAAI,CAAC;MAC3B,IAAIb,UAAU,EAAE;QACdA,UAAU,CAAC,CAAC;MACd;IACF;EACF,CAAC,EAAE,CAACD,UAAU,EAAED,IAAI,EAAEE,UAAU,CAAC,CAAC;;EAElC;EACAV,SAAS,CAAC,MAAM;IACd,IAAIsB,kBAAkB,EAAE;MACtB,MAAMe,KAAK,GAAGC,UAAU,CAAC,MAAM;QAC7BjB,cAAc,CAAC,IAAI,CAAC;QACpBkB,gBAAgB,CAACP,OAAO,GAAG,IAAI,CAAC,CAAC;QACjCT,qBAAqB,CAAC,KAAK,CAAC;MAC9B,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC;MACV,OAAO,MAAMiB,YAAY,CAACH,KAAK,CAAC;IAClC;EACF,CAAC,EAAE,CAACf,kBAAkB,CAAC,CAAC;EAExB,MAAMY,QAAQ,GAAIO,IAAI,IAAK;IACzB1B,WAAW,CAAC,IAAI,CAAC;IACjBF,cAAc,CAACoB,IAAI,IAAIA,IAAI,GAAGQ,IAAI,CAAC,CAAC,CAAC;;IAErC;IACA1B,WAAW,CAAC,KAAK,CAAC;EACpB,CAAC;EAED,MAAM2B,QAAQ,GAAGA,CAAA,KAAM;IAAA,IAAAC,cAAA,EAAAC,cAAA;IACrB,IAAI,CAAApC,IAAI,aAAJA,IAAI,wBAAAmC,cAAA,GAAJnC,IAAI,CAAEsB,OAAO,cAAAa,cAAA,uBAAbA,cAAA,CAAeZ,IAAI,MAAK,QAAQ,EAAE;MACpC,OAAO,QAAQ;IACjB;IACA,OAAO,CAAAvB,IAAI,aAAJA,IAAI,wBAAAoC,cAAA,GAAJpC,IAAI,CAAEsB,OAAO,cAAAc,cAAA,uBAAbA,cAAA,CAAeC,KAAK,KAAI,UAAU;EAC3C,CAAC;EAED,MAAMC,cAAc,GAAGA,CAAA,KAAM;IAC3B,MAAMC,iBAAiB,GAAG,CAAC3B,WAAW;IACtCC,cAAc,CAAC0B,iBAAiB,CAAC;IACjC1C,WAAW,CAAC2C,GAAG,CAACvB,YAAY,EAAEsB,iBAAiB,CAAC,CAAC,CAAC;EACpD,CAAC;EAED,oBACE3C,OAAA;IAAK6C,SAAS,EAAE,mBAAmBxC,UAAU,GAAG,UAAU,GAAG,EAAE,IAAIW,WAAW,GAAG,WAAW,GAAG,EAAE,EAAG;IAAA8B,QAAA,gBAClG9C,OAAA;MAAK6C,SAAS,EAAC,cAAc;MAAAC,QAAA,gBAC3B9C,OAAA;QAAK6C,SAAS,EAAC,aAAa;QAAAC,QAAA,EAAER,QAAQ,CAAC;MAAC;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eAC/ClD,OAAA;QACE6C,SAAS,EAAC,kBAAkB;QAC5BM,OAAO,EAAET,cAAe;QACxB,cAAY1B,WAAW,GAAG,IAAI,GAAG,IAAK;QACtC,eAAaA,WAAW,GAAG,GAAG,GAAG;MAAI;QAAA+B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAE/B,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC,eACNlD,OAAA;MAAK6C,SAAS,EAAC,eAAe;MAAAC,QAAA,GAC3BlC,SAAS,IAAIE,UAAU,iBACtBd,OAAA;QAAK6C,SAAS,EAAC,sBAAsB;QAAAC,QAAA,eACnC9C,OAAA,CAACF,MAAM;UAACM,IAAI,EAAEU,UAAW;UAACT,UAAU,EAAEA;QAAW;UAAA0C,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACjD,CACN,EAEA1C,WAAW,iBACVR,OAAA;QAAK6C,SAAS,EAAC,YAAY;QAAAC,QAAA,GACxBtC,WAAW,EACXE,QAAQ,iBAAIV,OAAA;UAAM6C,SAAS,EAAC,QAAQ;UAAAC,QAAA,EAAC;QAAC;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC3C,CACN;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAC3C,EAAA,CA3HIJ,KAAK;AAAAiD,EAAA,GAALjD,KAAK;AA6HX,eAAeA,KAAK;AAAC,IAAAiD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}