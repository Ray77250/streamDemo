{"ast":null,"code":"var _jsxFileName = \"/Users/tal/Desktop/streaming/frontend/src/components/Step.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './Step.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Step = ({\n  data,\n  isFinished,\n  onComplete\n}) => {\n  _s();\n  const [displayText, setDisplayText] = useState('');\n  const [isTyping, setIsTyping] = useState(false);\n  useEffect(() => {\n    if (data && data.content) {\n      const text = data.content.text || '';\n      if (text && !isTyping) {\n        typeText(text);\n      }\n    }\n  }, [data]);\n  useEffect(() => {\n    var _data$content;\n    if (isFinished && data !== null && data !== void 0 && (_data$content = data.content) !== null && _data$content !== void 0 && _data$content.is_finished) {\n      setShowCheckmark(true);\n      if (onComplete) {\n        onComplete();\n      }\n    }\n  }, [isFinished, data, onComplete]);\n  const typeText = text => {\n    setIsTyping(true);\n    setDisplayText('');\n    let currentIndex = 0;\n    const typeInterval = setInterval(() => {\n      if (currentIndex < text.length) {\n        setDisplayText(text.substring(0, currentIndex + 1));\n        currentIndex++;\n      } else {\n        clearInterval(typeInterval);\n        setIsTyping(false);\n      }\n    }, 50); // 50ms per character for typing effect\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `step-container ${isFinished ? 'finished' : ''}`,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"step-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"step-title\",\n        children: \"\\u6B65\\u9AA4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), isTyping && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"typing-indicator\",\n        children: \"\\u6B63\\u5728\\u8F93\\u5165...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 22\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"step-content\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"step-text\",\n        children: [displayText, isTyping && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"cursor\",\n          children: \"|\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 24\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n_s(Step, \"B5HxKXHsjiRAVtuXhmpLYNvyV5w=\");\n_c = Step;\nexport default Step;\nvar _c;\n$RefreshReg$(_c, \"Step\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Step","data","isFinished","onComplete","_s","displayText","setDisplayText","isTyping","setIsTyping","content","text","typeText","_data$content","is_finished","setShowCheckmark","currentIndex","typeInterval","setInterval","length","substring","clearInterval","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/tal/Desktop/streaming/frontend/src/components/Step.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './Step.css';\n\nconst Step = ({ data, isFinished, onComplete }) => {\n  const [displayText, setDisplayText] = useState('');\n  const [isTyping, setIsTyping] = useState(false);\n\n  useEffect(() => {\n    if (data && data.content) {\n      const text = data.content.text || '';\n      if (text && !isTyping) {\n        typeText(text);\n      }\n    }\n  }, [data]);\n\n  useEffect(() => {\n    if (isFinished && data?.content?.is_finished) {\n      setShowCheckmark(true);\n      if (onComplete) {\n        onComplete();\n      }\n    }\n  }, [isFinished, data, onComplete]);\n\n  const typeText = (text) => {\n    setIsTyping(true);\n    setDisplayText('');\n    let currentIndex = 0;\n\n    const typeInterval = setInterval(() => {\n      if (currentIndex < text.length) {\n        setDisplayText(text.substring(0, currentIndex + 1));\n        currentIndex++;\n      } else {\n        clearInterval(typeInterval);\n        setIsTyping(false);\n      }\n    }, 50); // 50ms per character for typing effect\n  };\n\n  return (\n    <div className={`step-container ${isFinished ? 'finished' : ''}`}>\n      <div className=\"step-header\">\n        <div className=\"step-title\">步骤</div>\n        {isTyping && <div className=\"typing-indicator\">正在输入...</div>}\n      </div>\n      <div className=\"step-content\">\n        <div className=\"step-text\">\n          {displayText}\n          {isTyping && <span className=\"cursor\">|</span>}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Step;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}