{"ast":null,"code":"var _jsxFileName = \"/Users/tal/Desktop/streaming/frontend/src/components/Think.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './Think.css';\nimport Search from './Search';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Think = ({\n  data,\n  isFinished,\n  onComplete\n}) => {\n  _s();\n  const [displayText, setDisplayText] = useState('');\n  const [isTyping, setIsTyping] = useState(false);\n  const [hasSearch, setHasSearch] = useState(false);\n  const [searchData, setSearchData] = useState(null);\n  const [processedMsgIds, setProcessedMsgIds] = useState(new Set());\n\n  // 重置状态当data变化时\n  useEffect(() => {\n    if (data && data.msg_id) {\n      // 检查是否是新的对话（通过msg_id判断）\n      if (!processedMsgIds.has(data.msg_id)) {\n        setDisplayText('');\n        setHasSearch(false);\n        setSearchData(null);\n        setIsTyping(false);\n      }\n    }\n  }, [data === null || data === void 0 ? void 0 : data.msg_id, processedMsgIds]);\n  useEffect(() => {\n    if (data && data.content && data.msg_id) {\n      const content = data.content.content || '';\n      const type = data.content.type;\n\n      // 如果遇到search类型，记录并保存search数据\n      if (type === 'search') {\n        setHasSearch(true);\n        setSearchData(data.content);\n      }\n      // 检查是否已经处理过这个消息\n      if (content && !isTyping && type !== 'search' && !processedMsgIds.has(data.msg_id)) {\n        setProcessedMsgIds(prev => new Set([...prev, data.msg_id]));\n        typeText(content);\n      }\n    }\n  }, [data, isTyping, processedMsgIds]);\n  useEffect(() => {\n    var _data$content;\n    if (isFinished && data !== null && data !== void 0 && (_data$content = data.content) !== null && _data$content !== void 0 && _data$content.is_finished) {\n      setIsTyping(false);\n      if (onComplete) {\n        onComplete();\n      }\n    }\n  }, [isFinished, data, onComplete]);\n  const typeText = text => {\n    setIsTyping(true);\n    setDisplayText(prev => prev + text); // 追加文本而不是替换\n\n    // 模拟思考延迟，使用useRef来避免内存泄漏\n    const timeoutId = setTimeout(() => {\n      setIsTyping(false);\n    }, 100);\n\n    // 返回清理函数\n    return () => clearTimeout(timeoutId);\n  };\n  const getTitle = () => {\n    if (!(data !== null && data !== void 0 && data.content)) {\n      return '等待中...';\n    }\n    const type = data.content.type;\n    if (type === 'search') {\n      return '搜索中...';\n    }\n    if (type === 'step') {\n      return '处理中...';\n    }\n    if (type === 'think') {\n      return '思考中...';\n    }\n    if (data.content.title) {\n      return data.content.title;\n    }\n    return '处理中...';\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `think-container ${isFinished ? 'finished' : ''}`,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"think-header\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"think-title\",\n        children: getTitle()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"think-content\",\n      children: [hasSearch && searchData && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"think-search-section\",\n        children: /*#__PURE__*/_jsxDEV(Search, {\n          data: searchData,\n          isFinished: isFinished\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }, this), (displayText || isTyping) && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"think-text\",\n        children: [displayText, isTyping && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"cursor\",\n          children: \"|\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 26\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 5\n  }, this);\n};\n_s(Think, \"OU631zX2zwdTBcxHl/o1BMpY52Y=\");\n_c = Think;\nexport default Think;\nvar _c;\n$RefreshReg$(_c, \"Think\");","map":{"version":3,"names":["React","useState","useEffect","Search","jsxDEV","_jsxDEV","Think","data","isFinished","onComplete","_s","displayText","setDisplayText","isTyping","setIsTyping","hasSearch","setHasSearch","searchData","setSearchData","processedMsgIds","setProcessedMsgIds","Set","msg_id","has","content","type","prev","typeText","_data$content","is_finished","text","timeoutId","setTimeout","clearTimeout","getTitle","title","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/tal/Desktop/streaming/frontend/src/components/Think.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './Think.css';\nimport Search from './Search';\n\nconst Think = ({ data, isFinished, onComplete }) => {\n  const [displayText, setDisplayText] = useState('');\n  const [isTyping, setIsTyping] = useState(false);\n  const [hasSearch, setHasSearch] = useState(false);\n  const [searchData, setSearchData] = useState(null);\n  const [processedMsgIds, setProcessedMsgIds] = useState(new Set());\n\n  // 重置状态当data变化时\n  useEffect(() => {\n    if (data && data.msg_id) {\n      // 检查是否是新的对话（通过msg_id判断）\n      if (!processedMsgIds.has(data.msg_id)) {\n        setDisplayText('');\n        setHasSearch(false);\n        setSearchData(null);\n        setIsTyping(false);\n      }\n    }\n  }, [data?.msg_id, processedMsgIds]);\n\n  useEffect(() => {\n    if (data && data.content && data.msg_id) {\n      const content = data.content.content || '';\n      const type = data.content.type;\n      \n      // 如果遇到search类型，记录并保存search数据\n      if (type === 'search') {\n        setHasSearch(true);\n        setSearchData(data.content);\n      }\n      // 检查是否已经处理过这个消息\n      if (content && !isTyping && type !== 'search' && !processedMsgIds.has(data.msg_id)) {\n        setProcessedMsgIds(prev => new Set([...prev, data.msg_id]));\n        typeText(content);\n      }\n    }\n  }, [data, isTyping, processedMsgIds]);\n\n  useEffect(() => {\n    if (isFinished && data?.content?.is_finished) {\n      setIsTyping(false);\n      if (onComplete) {\n        onComplete();\n      }\n    }\n  }, [isFinished, data, onComplete]);\n\n  const typeText = (text) => {\n    setIsTyping(true);\n    setDisplayText(prev => prev + text); // 追加文本而不是替换\n    \n    // 模拟思考延迟，使用useRef来避免内存泄漏\n    const timeoutId = setTimeout(() => {\n      setIsTyping(false);\n    }, 100);\n    \n    // 返回清理函数\n    return () => clearTimeout(timeoutId);\n  };\n\n  const getTitle = () => {\n    if (!data?.content) {\n      return '等待中...';\n    }\n    \n    const type = data.content.type;\n    if (type === 'search') {\n      return '搜索中...';\n    }\n    if (type === 'step') {\n      return '处理中...';\n    }\n    if (type === 'think') {\n      return '思考中...';\n    }\n    if (data.content.title) {\n      return data.content.title;\n    }\n    return '处理中...';\n  };\n\n  return (\n    <div className={`think-container ${isFinished ? 'finished' : ''}`}>\n      <div className=\"think-header\">\n        <div className=\"think-title\">{getTitle()}</div>\n      </div>\n      <div className=\"think-content\">\n        {hasSearch && searchData && (\n          <div className=\"think-search-section\">\n            <Search data={searchData} isFinished={isFinished} />\n          </div>\n        )}\n      \n        {(displayText || isTyping) && (\n          <div className=\"think-text\">\n            {displayText}\n            {isTyping && <span className=\"cursor\">|</span>}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Think;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}